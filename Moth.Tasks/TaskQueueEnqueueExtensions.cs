namespace Moth.Tasks
{
    using System;

    /* ------------------------------------------------------ *
     * Generated by TaskQueueEnqueueExtensions.tt T4 template *
     * This file should not be edited manually.               *
     * ------------------------------------------------------ */

    /// <summary>
    /// Extends <see cref="TaskQueue"/> to allow generic <see cref="Action"/>s to be enqueued as tasks.
    /// </summary>
    public static class TaskQueueEnqueueExtensions
    {
        /// <summary>
        /// Enqueue an action to be run later.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue (this TaskQueue tasks, Action action)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask (action));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1> (this TaskQueue tasks, Action<T1> action, T1 arg1)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1> (action, arg1));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1> (this TaskQueue tasks, Action<T1> action, T1 arg1, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1> (action, arg1), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2> (this TaskQueue tasks, Action<T1, T2> action, T1 arg1, T2 arg2)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2> (action, arg1, arg2));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2> (this TaskQueue tasks, Action<T1, T2> action, T1 arg1, T2 arg2, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2> (action, arg1, arg2), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3> (this TaskQueue tasks, Action<T1, T2, T3> action, T1 arg1, T2 arg2, T3 arg3)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3> (action, arg1, arg2, arg3));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3> (this TaskQueue tasks, Action<T1, T2, T3> action, T1 arg1, T2 arg2, T3 arg3, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3> (action, arg1, arg2, arg3), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4> (this TaskQueue tasks, Action<T1, T2, T3, T4> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4> (action, arg1, arg2, arg3, arg4));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4> (this TaskQueue tasks, Action<T1, T2, T3, T4> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4> (action, arg1, arg2, arg3, arg4), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5> (action, arg1, arg2, arg3, arg4, arg5));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5> (action, arg1, arg2, arg3, arg4, arg5), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6> (action, arg1, arg2, arg3, arg4, arg5, arg6));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6> (action, arg1, arg2, arg3, arg4, arg5, arg6), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg15">The 15th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T15">The type of the 15th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg15">The 15th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T15">The type of the 15th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15), out handle);
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg15">The 15th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg16">The 16th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T15">The type of the 15th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T16">The type of the 16th parameter of <paramref name="action"/>.</typeparam>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16));
        }

        /// <summary>
        /// Enqueue an action to be run later with supplied arguments, giving out a <see cref="TaskHandle"/> for checking task status.
        /// </summary>
        /// <param name="tasks"><see cref="TaskQueue"/> in which the action is enqueued.</param>
        /// <param name="action">Action to enqueue.</param>
        /// <param name="arg1">The 1st argument to run <paramref name="action"/> with.</param>
        /// <param name="arg2">The 2nd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg3">The 3rd argument to run <paramref name="action"/> with.</param>
        /// <param name="arg4">The 4th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg5">The 5th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg6">The 6th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg7">The 7th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg8">The 8th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg9">The 9th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg10">The 10th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg11">The 11th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg12">The 12th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg13">The 13th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg14">The 14th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg15">The 15th argument to run <paramref name="action"/> with.</param>
        /// <param name="arg16">The 16th argument to run <paramref name="action"/> with.</param>
        /// <typeparam name="T1">The type of the 1st parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T2">The type of the 2nd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T3">The type of the 3rd parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T4">The type of the 4th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T5">The type of the 5th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T6">The type of the 6th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T7">The type of the 7th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T8">The type of the 8th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T9">The type of the 9th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T10">The type of the 10th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T11">The type of the 11th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T12">The type of the 12th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T13">The type of the 13th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T14">The type of the 14th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T15">The type of the 15th parameter of <paramref name="action"/>.</typeparam>
        /// <typeparam name="T16">The type of the 16th parameter of <paramref name="action"/>.</typeparam>
        /// <param name="handle"><see cref="TaskHandle"/> for checking task status.</param>
        /// <exception cref="ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        /// <exception cref="ObjectDisposedException">The <see cref="TaskQueue"/> has been disposed.</exception>
        public static void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> (this TaskQueue tasks, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, out TaskHandle handle)
        {
            if (action == null)
            {
                throw new ArgumentNullException (nameof (action));
            }

            tasks.Enqueue (new DelegateTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> (action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16), out handle);
        }
    }
}