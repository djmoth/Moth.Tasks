### YamlMime:ManagedReference
items:
- uid: Moth.Tasks.TaskQueue
  commentId: T:Moth.Tasks.TaskQueue
  id: TaskQueue
  parent: Moth.Tasks
  children:
  - Moth.Tasks.TaskQueue.#ctor
  - Moth.Tasks.TaskQueue.Clear(System.Action{System.Exception})
  - Moth.Tasks.TaskQueue.Count
  - Moth.Tasks.TaskQueue.Dispose
  - Moth.Tasks.TaskQueue.Dispose(System.Boolean)
  - Moth.Tasks.TaskQueue.Enqueue(System.Action)
  - Moth.Tasks.TaskQueue.Enqueue``1(``0@)
  - Moth.Tasks.TaskQueue.Enqueue``1(``0@,Moth.Tasks.TaskHandle@)
  - Moth.Tasks.TaskQueue.Enqueue``1(System.Action{``0},``0)
  - Moth.Tasks.TaskQueue.Enqueue``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  - Moth.Tasks.TaskQueue.Enqueue``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  - Moth.Tasks.TaskQueue.Enqueue``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  - Moth.Tasks.TaskQueue.Enqueue``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  - Moth.Tasks.TaskQueue.Enqueue``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  - Moth.Tasks.TaskQueue.Enqueue``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)
  - Moth.Tasks.TaskQueue.Enqueue``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)
  - Moth.Tasks.TaskQueue.Enqueue``2(System.Action{``0,``1},``0,``1)
  - Moth.Tasks.TaskQueue.Enqueue``3(System.Action{``0,``1,``2},``0,``1,``2)
  - Moth.Tasks.TaskQueue.Enqueue``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)
  - Moth.Tasks.TaskQueue.Enqueue``5(System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)
  - Moth.Tasks.TaskQueue.Enqueue``6(System.Action{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)
  - Moth.Tasks.TaskQueue.Enqueue``7(System.Action{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)
  - Moth.Tasks.TaskQueue.Enqueue``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)
  - Moth.Tasks.TaskQueue.Enqueue``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  - Moth.Tasks.TaskQueue.Finalize
  - Moth.Tasks.TaskQueue.RunNextTask(Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  - Moth.Tasks.TaskQueue.RunNextTask(System.Exception@,Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  - Moth.Tasks.TaskQueue.TryRunNextTask(Moth.Tasks.IProfiler)
  - Moth.Tasks.TaskQueue.TryRunNextTask(System.Exception@,Moth.Tasks.IProfiler)
  langs:
  - csharp
  - vb
  name: TaskQueue
  nameWithType: TaskQueue
  fullName: Moth.Tasks.TaskQueue
  type: Class
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: TaskQueue
    path: TaskQueueActions.cs
    startLine: 9
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nA queue of tasks, which can be run in FIFO order.\n"
  example: []
  syntax:
    content: 'public class TaskQueue : IDisposable'
    content.vb: >-
      Public Class TaskQueue
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Moth.Tasks.TaskQueue.#ctor
  commentId: M:Moth.Tasks.TaskQueue.#ctor
  id: '#ctor'
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: TaskQueue()
  nameWithType: TaskQueue.TaskQueue()
  fullName: Moth.Tasks.TaskQueue.TaskQueue()
  type: Constructor
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: .ctor
    path: TaskQueue.cs
    startLine: 28
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nInitializes a new instance of the <xref href=\"Moth.Tasks.TaskQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TaskQueue()
    content.vb: Public Sub New
  overload: Moth.Tasks.TaskQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.TaskQueue.Finalize
  commentId: M:Moth.Tasks.TaskQueue.Finalize
  id: Finalize
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TaskQueue.Finalize()
  fullName: Moth.Tasks.TaskQueue.Finalize()
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Finalize
    path: TaskQueue.cs
    startLine: 45
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nFinalizes an instance of the <xref href=\"Moth.Tasks.TaskQueue\" data-throw-if-not-resolved=\"false\"></xref> class. Also disposes of tasks implementing <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Moth.Tasks.TaskQueue.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Moth.Tasks.TaskQueue.Count
  commentId: P:Moth.Tasks.TaskQueue.Count
  id: Count
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TaskQueue.Count
  fullName: Moth.Tasks.TaskQueue.Count
  type: Property
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Count
    path: TaskQueue.cs
    startLine: 50
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nThe number of tasks currently enqueued.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Moth.Tasks.TaskQueue.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Moth.Tasks.TaskQueue.Enqueue``1(``0@)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``1(``0@)
  id: Enqueue``1(``0@)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T>(in T)
  nameWithType: TaskQueue.Enqueue<T>(in T)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T>(in T)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueue.cs
    startLine: 67
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an <xref href=\"Moth.Tasks.ITask\" data-throw-if-not-resolved=\"false\"></xref> to be run later.\n"
  example: []
  syntax:
    content: >-
      public void Enqueue<T>(in T task)
          where T : struct, ITask
    parameters:
    - id: task
      type: '{T}'
      description: Task data.
    typeParameters:
    - id: T
      description: Type of task to run.
    content.vb: Public Sub Enqueue(Of T As {Structure, ITask})(ByRef task As T)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T)(ByRef T)
  name.vb: Enqueue(Of T)(ByRef T)
- uid: Moth.Tasks.TaskQueue.Enqueue``1(``0@,Moth.Tasks.TaskHandle@)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``1(``0@,Moth.Tasks.TaskHandle@)
  id: Enqueue``1(``0@,Moth.Tasks.TaskHandle@)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T>(in T, out TaskHandle)
  nameWithType: TaskQueue.Enqueue<T>(in T, out TaskHandle)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T>(in T, out Moth.Tasks.TaskHandle)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueue.cs
    startLine: 84
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an <xref href=\"Moth.Tasks.ITask\" data-throw-if-not-resolved=\"false\"></xref> to be run later, giving out a <xref href=\"Moth.Tasks.TaskHandle\" data-throw-if-not-resolved=\"false\"></xref> for checking task status.\n"
  example: []
  syntax:
    content: >-
      public void Enqueue<T>(in T task, out TaskHandle handle)
          where T : struct, ITask
    parameters:
    - id: task
      type: '{T}'
      description: Task data.
    - id: handle
      type: Moth.Tasks.TaskHandle
      description: Handle for checking task status.
    typeParameters:
    - id: T
      description: Type of task to run.
    content.vb: Public Sub Enqueue(Of T As {Structure, ITask})(ByRef task As T, ByRef handle As TaskHandle)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T)(ByRef T, ByRef TaskHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T)(ByRef T, ByRef Moth.Tasks.TaskHandle)
  name.vb: Enqueue(Of T)(ByRef T, ByRef TaskHandle)
- uid: Moth.Tasks.TaskQueue.RunNextTask(Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  commentId: M:Moth.Tasks.TaskQueue.RunNextTask(Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  id: RunNextTask(Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: RunNextTask(IProfiler, CancellationToken)
  nameWithType: TaskQueue.RunNextTask(IProfiler, CancellationToken)
  fullName: Moth.Tasks.TaskQueue.RunNextTask(Moth.Tasks.IProfiler, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: RunNextTask
    path: TaskQueue.cs
    startLine: 116
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nBlocks until a task is ready in the queue, then runs it.\n"
  example: []
  syntax:
    content: public void RunNextTask(IProfiler profiler = null, CancellationToken token = default(CancellationToken))
    parameters:
    - id: profiler
      type: Moth.Tasks.IProfiler
      description: <xref href="Moth.Tasks.IProfiler" data-throw-if-not-resolved="false"></xref> to profile the run-time of the task.
    - id: token
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe when waiting for a task. Does not cancel actual task execution.
    content.vb: Public Sub RunNextTask(profiler As IProfiler = Nothing, token As CancellationToken = Nothing)
  overload: Moth.Tasks.TaskQueue.RunNextTask*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.TaskQueue.RunNextTask(System.Exception@,Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  commentId: M:Moth.Tasks.TaskQueue.RunNextTask(System.Exception@,Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  id: RunNextTask(System.Exception@,Moth.Tasks.IProfiler,System.Threading.CancellationToken)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: RunNextTask(out Exception, IProfiler, CancellationToken)
  nameWithType: TaskQueue.RunNextTask(out Exception, IProfiler, CancellationToken)
  fullName: Moth.Tasks.TaskQueue.RunNextTask(out System.Exception, Moth.Tasks.IProfiler, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: RunNextTask
    path: TaskQueue.cs
    startLine: 124
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nBlocks until a task is ready in the queue, then runs it.\n"
  example: []
  syntax:
    content: public void RunNextTask(out Exception exception, IProfiler profiler = null, CancellationToken token = default(CancellationToken))
    parameters:
    - id: exception
      type: System.Exception
      description: <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> thrown if task failed. Is <xref uid="langword_csharp_null" name="null" href=""></xref> if task was run successfully.
    - id: profiler
      type: Moth.Tasks.IProfiler
      description: <xref href="Moth.Tasks.IProfiler" data-throw-if-not-resolved="false"></xref> to profile the run-time of the task.
    - id: token
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe when waiting for a task. Does not cancel actual task execution.
    content.vb: Public Sub RunNextTask(ByRef exception As Exception, profiler As IProfiler = Nothing, token As CancellationToken = Nothing)
  overload: Moth.Tasks.TaskQueue.RunNextTask*
  nameWithType.vb: TaskQueue.RunNextTask(ByRef Exception, IProfiler, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.RunNextTask(ByRef System.Exception, Moth.Tasks.IProfiler, System.Threading.CancellationToken)
  name.vb: RunNextTask(ByRef Exception, IProfiler, CancellationToken)
- uid: Moth.Tasks.TaskQueue.TryRunNextTask(Moth.Tasks.IProfiler)
  commentId: M:Moth.Tasks.TaskQueue.TryRunNextTask(Moth.Tasks.IProfiler)
  id: TryRunNextTask(Moth.Tasks.IProfiler)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: TryRunNextTask(IProfiler)
  nameWithType: TaskQueue.TryRunNextTask(IProfiler)
  fullName: Moth.Tasks.TaskQueue.TryRunNextTask(Moth.Tasks.IProfiler)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: TryRunNextTask
    path: TaskQueue.cs
    startLine: 145
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nTries to run the next task in the queue, if present. May also perform profiling on the task through an <xref href=\"Moth.Tasks.IProfiler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nPlease note that the return value does not indicate if a task was successful. The method will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a task was ready in the queue, regardless of whether an exception occured.\n"
  example: []
  syntax:
    content: public bool TryRunNextTask(IProfiler profiler = null)
    parameters:
    - id: profiler
      type: Moth.Tasks.IProfiler
      description: <xref href="Moth.Tasks.IProfiler" data-throw-if-not-resolved="false"></xref> to profile the run-time of the task.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if a task was run, <xref uid="langword_csharp_false" name="false" href=""></xref> if the <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> is empty.
    content.vb: Public Function TryRunNextTask(profiler As IProfiler = Nothing) As Boolean
  overload: Moth.Tasks.TaskQueue.TryRunNextTask*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.TaskQueue.TryRunNextTask(System.Exception@,Moth.Tasks.IProfiler)
  commentId: M:Moth.Tasks.TaskQueue.TryRunNextTask(System.Exception@,Moth.Tasks.IProfiler)
  id: TryRunNextTask(System.Exception@,Moth.Tasks.IProfiler)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: TryRunNextTask(out Exception, IProfiler)
  nameWithType: TaskQueue.TryRunNextTask(out Exception, IProfiler)
  fullName: Moth.Tasks.TaskQueue.TryRunNextTask(out System.Exception, Moth.Tasks.IProfiler)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: TryRunNextTask
    path: TaskQueue.cs
    startLine: 156
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nTries to run the next task in the queue, if present. Provides an <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> thrown by the task, in case it fails. May also perform profiling on the task through an <xref href=\"Moth.Tasks.IProfiler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nPlease note that the return value does not indicate if a task was successful. The method will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a task was ready in the queue, regardless of whether an exception occured.\n"
  example: []
  syntax:
    content: public bool TryRunNextTask(out Exception exception, IProfiler profiler = null)
    parameters:
    - id: exception
      type: System.Exception
      description: <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> thrown if task failed. Is <xref uid="langword_csharp_null" name="null" href=""></xref> if task was run successfully.
    - id: profiler
      type: Moth.Tasks.IProfiler
      description: <xref href="Moth.Tasks.IProfiler" data-throw-if-not-resolved="false"></xref> to profile the run-time of the task.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if a task was run, <xref uid="langword_csharp_false" name="false" href=""></xref> if the <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> is empty.
    content.vb: Public Function TryRunNextTask(ByRef exception As Exception, profiler As IProfiler = Nothing) As Boolean
  overload: Moth.Tasks.TaskQueue.TryRunNextTask*
  nameWithType.vb: TaskQueue.TryRunNextTask(ByRef Exception, IProfiler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.TryRunNextTask(ByRef System.Exception, Moth.Tasks.IProfiler)
  name.vb: TryRunNextTask(ByRef Exception, IProfiler)
- uid: Moth.Tasks.TaskQueue.Clear(System.Action{System.Exception})
  commentId: M:Moth.Tasks.TaskQueue.Clear(System.Action{System.Exception})
  id: Clear(System.Action{System.Exception})
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Clear(Action<Exception>)
  nameWithType: TaskQueue.Clear(Action<Exception>)
  fullName: Moth.Tasks.TaskQueue.Clear(System.Action<System.Exception>)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Clear
    path: TaskQueue.cs
    startLine: 229
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nRemoves all pending tasks from the queue. Also calls <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> on tasks which implement the method.\n"
  remarks: "\nAs the method iterates through all tasks in the queue and calls <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> on tasks, it can hang for an unknown amount of time. If an exception is thrown in an <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> call, the method continues on with disposing the remaining tasks.\n"
  example: []
  syntax:
    content: public void Clear(Action<Exception> exceptionHandler = null)
    parameters:
    - id: exceptionHandler
      type: System.Action{System.Exception}
      description: Method for handling an exception thrown by a task&apos;s <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Clear(exceptionHandler As Action(Of Exception) = Nothing)
  overload: Moth.Tasks.TaskQueue.Clear*
  nameWithType.vb: TaskQueue.Clear(Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Clear(System.Action(Of System.Exception))
  name.vb: Clear(Action(Of Exception))
- uid: Moth.Tasks.TaskQueue.Dispose
  commentId: M:Moth.Tasks.TaskQueue.Dispose
  id: Dispose
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TaskQueue.Dispose()
  fullName: Moth.Tasks.TaskQueue.Dispose()
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Dispose
    path: TaskQueue.cs
    startLine: 265
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nDisposes all tasks which implements <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAs the method iterates through all tasks in the queue and calls <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> on tasks, it can hang for an unknown amount of time. If an exception is thrown in an <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> call, the method continues on with disposing the remaining tasks.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Moth.Tasks.TaskQueue.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.TaskQueue.Dispose(System.Boolean)
  commentId: M:Moth.Tasks.TaskQueue.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TaskQueue.Dispose(Boolean)
  fullName: Moth.Tasks.TaskQueue.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueue.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Dispose
    path: TaskQueue.cs
    startLine: 281
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nDisposes all tasks which implements <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAs the method iterates through all tasks in the queue and calls <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> on tasks, it can hang for an unknown amount of time. If an exception is thrown in an <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> call, the method continues on with disposing the remaining tasks.\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if called from <xref href="Moth.Tasks.TaskQueue.Dispose" data-throw-if-not-resolved="false"></xref>, <xref uid="langword_csharp_false" name="false" href=""></xref> if called from finalizer.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Moth.Tasks.TaskQueue.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Moth.Tasks.TaskQueue.Enqueue(System.Action)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue(System.Action)
  id: Enqueue(System.Action)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue(Action)
  nameWithType: TaskQueue.Enqueue(Action)
  fullName: Moth.Tasks.TaskQueue.Enqueue(System.Action)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 17
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later.\n"
  example: []
  syntax:
    content: public void Enqueue(Action action)
    parameters:
    - id: action
      type: System.Action
      description: Action to enqueue.
    content.vb: Public Sub Enqueue(action As Action)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.TaskQueue.Enqueue``1(System.Action{``0},``0)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``1(System.Action{``0},``0)
  id: Enqueue``1(System.Action{``0},``0)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1>(Action<T1>, T1)
  nameWithType: TaskQueue.Enqueue<T1>(Action<T1>, T1)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1>(System.Action<T1>, T1)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 35
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1>(Action<T1> action, T1 arg1)
    parameters:
    - id: action
      type: System.Action{{T1}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1)(action As Action(Of T1), arg1 As T1)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1)(Action(Of T1), T1)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1)(System.Action(Of T1), T1)
  name.vb: Enqueue(Of T1)(Action(Of T1), T1)
- uid: Moth.Tasks.TaskQueue.Enqueue``2(System.Action{``0,``1},``0,``1)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``2(System.Action{``0,``1},``0,``1)
  id: Enqueue``2(System.Action{``0,``1},``0,``1)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2>(Action<T1, T2>, T1, T2)
  nameWithType: TaskQueue.Enqueue<T1, T2>(Action<T1, T2>, T1, T2)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2>(System.Action<T1, T2>, T1, T2)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 55
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2>(Action<T1, T2> action, T1 arg1, T2 arg2)
    parameters:
    - id: action
      type: System.Action{{T1},{T2}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2)(action As Action(Of T1, T2), arg1 As T1, arg2 As T2)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2)(Action(Of T1, T2), T1, T2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2)(System.Action(Of T1, T2), T1, T2)
  name.vb: Enqueue(Of T1, T2)(Action(Of T1, T2), T1, T2)
- uid: Moth.Tasks.TaskQueue.Enqueue``3(System.Action{``0,``1,``2},``0,``1,``2)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``3(System.Action{``0,``1,``2},``0,``1,``2)
  id: Enqueue``3(System.Action{``0,``1,``2},``0,``1,``2)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3>(Action<T1, T2, T3>, T1, T2, T3)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3>(Action<T1, T2, T3>, T1, T2, T3)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3>(System.Action<T1, T2, T3>, T1, T2, T3)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 77
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 arg1, T2 arg2, T3 arg3)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3)(action As Action(Of T1, T2, T3), arg1 As T1, arg2 As T2, arg3 As T3)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3)(Action(Of T1, T2, T3), T1, T2, T3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3)(System.Action(Of T1, T2, T3), T1, T2, T3)
  name.vb: Enqueue(Of T1, T2, T3)(Action(Of T1, T2, T3), T1, T2, T3)
- uid: Moth.Tasks.TaskQueue.Enqueue``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)
  id: Enqueue``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4>, T1, T2, T3, T4)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4>, T1, T2, T3, T4)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4>(System.Action<T1, T2, T3, T4>, T1, T2, T3, T4)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 101
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4)(action As Action(Of T1, T2, T3, T4), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4)(Action(Of T1, T2, T3, T4), T1, T2, T3, T4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4)(System.Action(Of T1, T2, T3, T4), T1, T2, T3, T4)
  name.vb: Enqueue(Of T1, T2, T3, T4)(Action(Of T1, T2, T3, T4), T1, T2, T3, T4)
- uid: Moth.Tasks.TaskQueue.Enqueue``5(System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``5(System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)
  id: Enqueue``5(System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5>(Action<T1, T2, T3, T4, T5>, T1, T2, T3, T4, T5)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5>(Action<T1, T2, T3, T4, T5>, T1, T2, T3, T4, T5)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5>(System.Action<T1, T2, T3, T4, T5>, T1, T2, T3, T4, T5)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 127
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5>(Action<T1, T2, T3, T4, T5> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5)(action As Action(Of T1, T2, T3, T4, T5), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5)(Action(Of T1, T2, T3, T4, T5), T1, T2, T3, T4, T5)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5)(System.Action(Of T1, T2, T3, T4, T5), T1, T2, T3, T4, T5)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5)(Action(Of T1, T2, T3, T4, T5), T1, T2, T3, T4, T5)
- uid: Moth.Tasks.TaskQueue.Enqueue``6(System.Action{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``6(System.Action{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)
  id: Enqueue``6(System.Action{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6>(Action<T1, T2, T3, T4, T5, T6>, T1, T2, T3, T4, T5, T6)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6>(Action<T1, T2, T3, T4, T5, T6>, T1, T2, T3, T4, T5, T6)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6>(System.Action<T1, T2, T3, T4, T5, T6>, T1, T2, T3, T4, T5, T6)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 155
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6>(Action<T1, T2, T3, T4, T5, T6> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6)(action As Action(Of T1, T2, T3, T4, T5, T6), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6)(Action(Of T1, T2, T3, T4, T5, T6), T1, T2, T3, T4, T5, T6)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6)(System.Action(Of T1, T2, T3, T4, T5, T6), T1, T2, T3, T4, T5, T6)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6)(Action(Of T1, T2, T3, T4, T5, T6), T1, T2, T3, T4, T5, T6)
- uid: Moth.Tasks.TaskQueue.Enqueue``7(System.Action{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``7(System.Action{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)
  id: Enqueue``7(System.Action{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7>(Action<T1, T2, T3, T4, T5, T6, T7>, T1, T2, T3, T4, T5, T6, T7)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7>(Action<T1, T2, T3, T4, T5, T6, T7>, T1, T2, T3, T4, T5, T6, T7)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7>(System.Action<T1, T2, T3, T4, T5, T6, T7>, T1, T2, T3, T4, T5, T6, T7)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 185
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7>(Action<T1, T2, T3, T4, T5, T6, T7> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7)(action As Action(Of T1, T2, T3, T4, T5, T6, T7), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7)(Action(Of T1, T2, T3, T4, T5, T6, T7), T1, T2, T3, T4, T5, T6, T7)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7)(System.Action(Of T1, T2, T3, T4, T5, T6, T7), T1, T2, T3, T4, T5, T6, T7)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7)(Action(Of T1, T2, T3, T4, T5, T6, T7), T1, T2, T3, T4, T5, T6, T7)
- uid: Moth.Tasks.TaskQueue.Enqueue``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)
  id: Enqueue``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8>(Action<T1, T2, T3, T4, T5, T6, T7, T8>, T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8>(Action<T1, T2, T3, T4, T5, T6, T7, T8>, T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8>, T1, T2, T3, T4, T5, T6, T7, T8)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 217
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8>(Action<T1, T2, T3, T4, T5, T6, T7, T8> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8), T1, T2, T3, T4, T5, T6, T7, T8)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8), T1, T2, T3, T4, T5, T6, T7, T8)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8), T1, T2, T3, T4, T5, T6, T7, T8)
- uid: Moth.Tasks.TaskQueue.Enqueue``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  id: Enqueue``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 251
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: Moth.Tasks.TaskQueue.Enqueue``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  id: Enqueue``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 287
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: Moth.Tasks.TaskQueue.Enqueue``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  id: Enqueue``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 325
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: Moth.Tasks.TaskQueue.Enqueue``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  id: Enqueue``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 365
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg12
      type: '{T12}'
      description: The 12th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T12
      description: The type of the 12th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: Moth.Tasks.TaskQueue.Enqueue``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  id: Enqueue``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 407
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg12
      type: '{T12}'
      description: The 12th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg13
      type: '{T13}'
      description: The 13th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T12
      description: The type of the 12th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T13
      description: The type of the 13th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: Moth.Tasks.TaskQueue.Enqueue``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  id: Enqueue``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 451
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg12
      type: '{T12}'
      description: The 12th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg13
      type: '{T13}'
      description: The 13th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg14
      type: '{T14}'
      description: The 14th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T12
      description: The type of the 12th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T13
      description: The type of the 13th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T14
      description: The type of the 14th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13, arg14 As T14)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: Moth.Tasks.TaskQueue.Enqueue``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)
  id: Enqueue``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 497
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14},{T15}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg12
      type: '{T12}'
      description: The 12th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg13
      type: '{T13}'
      description: The 13th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg14
      type: '{T14}'
      description: The 14th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg15
      type: '{T15}'
      description: The 15th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T12
      description: The type of the 12th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T13
      description: The type of the 13th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T14
      description: The type of the 14th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T15
      description: The type of the 15th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13, arg14 As T14, arg15 As T15)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
- uid: Moth.Tasks.TaskQueue.Enqueue``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)
  commentId: M:Moth.Tasks.TaskQueue.Enqueue``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)
  id: Enqueue``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)
  parent: Moth.Tasks.TaskQueue
  langs:
  - csharp
  - vb
  name: Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  nameWithType: TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  fullName: Moth.Tasks.TaskQueue.Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  type: Method
  source:
    remote:
      path: Moth.Tasks/TaskQueueActions.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Enqueue
    path: TaskQueueActions.cs
    startLine: 545
  assemblies:
  - Moth.Tasks
  namespace: Moth.Tasks
  summary: "\nEnqueue an action to be run later with supplied arguments.\n"
  example: []
  syntax:
    content: public void Enqueue<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16)
    parameters:
    - id: action
      type: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14},{T15},{T16}}
      description: Action to enqueue.
    - id: arg1
      type: '{T1}'
      description: The 1st argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg2
      type: '{T2}'
      description: The 2nd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg3
      type: '{T3}'
      description: The 3rd argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg4
      type: '{T4}'
      description: The 4th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg5
      type: '{T5}'
      description: The 5th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg6
      type: '{T6}'
      description: The 6th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg7
      type: '{T7}'
      description: The 7th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg8
      type: '{T8}'
      description: The 8th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg9
      type: '{T9}'
      description: The 9th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg10
      type: '{T10}'
      description: The 10th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg11
      type: '{T11}'
      description: The 11th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg12
      type: '{T12}'
      description: The 12th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg13
      type: '{T13}'
      description: The 13th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg14
      type: '{T14}'
      description: The 14th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg15
      type: '{T15}'
      description: The 15th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    - id: arg16
      type: '{T16}'
      description: The 16th argument to run <code data-dev-comment-type="paramref" class="paramref">action</code> with.
    typeParameters:
    - id: T1
      description: The type of the 1st parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T2
      description: The type of the 2nd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T3
      description: The type of the 3rd parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T4
      description: The type of the 4th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T5
      description: The type of the 5th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T6
      description: The type of the 6th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T7
      description: The type of the 7th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T8
      description: The type of the 8th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T9
      description: The type of the 9th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T10
      description: The type of the 10th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T11
      description: The type of the 11th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T12
      description: The type of the 12th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T13
      description: The type of the 13th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T14
      description: The type of the 14th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T15
      description: The type of the 15th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    - id: T16
      description: The type of the 16th parameter of <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(action As Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13, arg14 As T14, arg15 As T15, arg16 As T16)
  overload: Moth.Tasks.TaskQueue.Enqueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">action</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Moth.Tasks.TaskQueue" data-throw-if-not-resolved="false"></xref> has been disposed.
  nameWithType.vb: TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Moth.Tasks.TaskQueue.Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  name.vb: Enqueue(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
references:
- uid: Moth.Tasks
  commentId: N:Moth.Tasks
  name: Moth.Tasks
  nameWithType: Moth.Tasks
  fullName: Moth.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
  commentId: M:Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  parent: Moth.Tasks.Tests.TestUtilities
  definition: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  name: GetPrivateValue<T>(String)
  nameWithType: TestUtilities.GetPrivateValue<T>(String)
  fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>(System.String)
  nameWithType.vb: TestUtilities.GetPrivateValue(Of T)(String)
  fullName.vb: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)(System.String)
  name.vb: GetPrivateValue(Of T)(String)
  spec.csharp:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
    name: GetPrivateValue<T>
    nameWithType: TestUtilities.GetPrivateValue<T>
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
    name: GetPrivateValue(Of T)
    nameWithType: TestUtilities.GetPrivateValue(Of T)
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  commentId: M:Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  isExternal: true
  name: GetPrivateValue<T>(Object, String)
  nameWithType: TestUtilities.GetPrivateValue<T>(Object, String)
  fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>(System.Object, System.String)
  nameWithType.vb: TestUtilities.GetPrivateValue(Of T)(Object, String)
  fullName.vb: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)(System.Object, System.String)
  name.vb: GetPrivateValue(Of T)(Object, String)
  spec.csharp:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
    name: GetPrivateValue<T>
    nameWithType: TestUtilities.GetPrivateValue<T>
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
    name: GetPrivateValue(Of T)
    nameWithType: TestUtilities.GetPrivateValue(Of T)
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Moth.Tasks.Tests.TestUtilities
  commentId: T:Moth.Tasks.Tests.TestUtilities
  parent: Moth.Tasks.Tests
  name: TestUtilities
  nameWithType: TestUtilities
  fullName: Moth.Tasks.Tests.TestUtilities
- uid: Moth.Tasks.Tests
  commentId: N:Moth.Tasks.Tests
  name: Moth.Tasks.Tests
  nameWithType: Moth.Tasks.Tests
  fullName: Moth.Tasks.Tests
- uid: Moth.Tasks.TaskQueue
  commentId: T:Moth.Tasks.TaskQueue
  parent: Moth.Tasks
  name: TaskQueue
  nameWithType: TaskQueue
  fullName: Moth.Tasks.TaskQueue
- uid: Moth.Tasks.TaskQueue.#ctor*
  commentId: Overload:Moth.Tasks.TaskQueue.#ctor
  name: TaskQueue
  nameWithType: TaskQueue.TaskQueue
  fullName: Moth.Tasks.TaskQueue.TaskQueue
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Moth.Tasks.TaskQueue.Finalize*
  commentId: Overload:Moth.Tasks.TaskQueue.Finalize
  name: Finalize
  nameWithType: TaskQueue.Finalize
  fullName: Moth.Tasks.TaskQueue.Finalize
- uid: Moth.Tasks.TaskQueue.Count*
  commentId: Overload:Moth.Tasks.TaskQueue.Count
  name: Count
  nameWithType: TaskQueue.Count
  fullName: Moth.Tasks.TaskQueue.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Moth.Tasks.ITask
  commentId: T:Moth.Tasks.ITask
  name: ITask
  nameWithType: ITask
  fullName: Moth.Tasks.ITask
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
- uid: Moth.Tasks.TaskQueue.Enqueue*
  commentId: Overload:Moth.Tasks.TaskQueue.Enqueue
  name: Enqueue
  nameWithType: TaskQueue.Enqueue
  fullName: Moth.Tasks.TaskQueue.Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Moth.Tasks.TaskHandle
  commentId: T:Moth.Tasks.TaskHandle
  parent: Moth.Tasks
  name: TaskHandle
  nameWithType: TaskHandle
  fullName: Moth.Tasks.TaskHandle
- uid: Moth.Tasks.IProfiler
  commentId: T:Moth.Tasks.IProfiler
  parent: Moth.Tasks
  name: IProfiler
  nameWithType: IProfiler
  fullName: Moth.Tasks.IProfiler
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Moth.Tasks.TaskQueue.RunNextTask*
  commentId: Overload:Moth.Tasks.TaskQueue.RunNextTask
  name: RunNextTask
  nameWithType: TaskQueue.RunNextTask
  fullName: Moth.Tasks.TaskQueue.RunNextTask
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Moth.Tasks.TaskQueue.TryRunNextTask*
  commentId: Overload:Moth.Tasks.TaskQueue.TryRunNextTask
  name: TryRunNextTask
  nameWithType: TaskQueue.TryRunNextTask
  fullName: Moth.Tasks.TaskQueue.TryRunNextTask
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Moth.Tasks.TaskQueue.Clear*
  commentId: Overload:Moth.Tasks.TaskQueue.Clear
  name: Clear
  nameWithType: TaskQueue.Clear
  fullName: Moth.Tasks.TaskQueue.Clear
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Moth.Tasks.TaskQueue.Dispose*
  commentId: Overload:Moth.Tasks.TaskQueue.Dispose
  name: Dispose
  nameWithType: TaskQueue.Dispose
  fullName: Moth.Tasks.TaskQueue.Dispose
- uid: Moth.Tasks.TaskQueue.Dispose
  commentId: M:Moth.Tasks.TaskQueue.Dispose
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{{T1}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T1>
  nameWithType: Action<T1>
  fullName: System.Action<T1>
  nameWithType.vb: Action(Of T1)
  fullName.vb: System.Action(Of T1)
  name.vb: Action(Of T1)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.Action{{T1},{T2}}
  commentId: T:System.Action{``0,``1}
  parent: System
  definition: System.Action`2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Action{{T1},{T2},{T3}}
  commentId: T:System.Action{``0,``1,``2}
  parent: System
  definition: System.Action`3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Action{{T1},{T2},{T3},{T4}}
  commentId: T:System.Action{``0,``1,``2,``3}
  parent: System
  definition: System.Action`4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: System.Action{{T1},{T2},{T3},{T4},{T5}}
  commentId: T:System.Action{``0,``1,``2,``3,``4}
  parent: System
  definition: System.Action`5
  name: Action<T1, T2, T3, T4, T5>
  nameWithType: Action<T1, T2, T3, T4, T5>
  fullName: System.Action<T1, T2, T3, T4, T5>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5)
  name.vb: Action(Of T1, T2, T3, T4, T5)
  spec.csharp:
  - uid: System.Action`5
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`5
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: System.Action`5
  commentId: T:System.Action`5
  isExternal: true
  name: Action<T1, T2, T3, T4, T5>
  nameWithType: Action<T1, T2, T3, T4, T5>
  fullName: System.Action<T1, T2, T3, T4, T5>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5)
  name.vb: Action(Of T1, T2, T3, T4, T5)
  spec.csharp:
  - uid: System.Action`5
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`5
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: )
    nameWithType: )
    fullName: )
- uid: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5}
  parent: System
  definition: System.Action`6
  name: Action<T1, T2, T3, T4, T5, T6>
  nameWithType: Action<T1, T2, T3, T4, T5, T6>
  fullName: System.Action<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6)
  spec.csharp:
  - uid: System.Action`6
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`6
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T6}'
  commentId: '!:T6'
  definition: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: System.Action`6
  commentId: T:System.Action`6
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6>
  nameWithType: Action<T1, T2, T3, T4, T5, T6>
  fullName: System.Action<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6)
  spec.csharp:
  - uid: System.Action`6
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`6
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: )
    nameWithType: )
    fullName: )
- uid: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6}
  parent: System
  definition: System.Action`7
  name: Action<T1, T2, T3, T4, T5, T6, T7>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7)
  spec.csharp:
  - uid: System.Action`7
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`7
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T7}'
  commentId: '!:T7'
  definition: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: System.Action`7
  commentId: T:System.Action`7
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7)
  spec.csharp:
  - uid: System.Action`7
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`7
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: )
    nameWithType: )
    fullName: )
- uid: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7}
  parent: System
  definition: System.Action`8
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  spec.csharp:
  - uid: System.Action`8
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`8
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T8}'
  commentId: '!:T8'
  definition: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: System.Action`8
  commentId: T:System.Action`8
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8)
  spec.csharp:
  - uid: System.Action`8
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`8
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: )
    nameWithType: )
    fullName: )
- uid: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8}
  parent: System
  definition: System.Action`9
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  spec.csharp:
  - uid: System.Action`9
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`9
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T9}'
  commentId: '!:T9'
  definition: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: System.Action`9
  commentId: T:System.Action`9
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)
  spec.csharp:
  - uid: System.Action`9
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`9
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: )
    nameWithType: )
    fullName: )
- uid: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}
  parent: System
  definition: System.Action`10
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - uid: System.Action`10
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`10
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T10}'
  commentId: '!:T10'
  definition: T10
  name: T10
  nameWithType: T10
  fullName: T10
- uid: System.Action`10
  commentId: T:System.Action`10
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - uid: System.Action`10
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`10
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: )
    nameWithType: )
    fullName: )
- uid: T10
  name: T10
  nameWithType: T10
  fullName: T10
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}
  parent: System
  definition: System.Action`11
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  spec.csharp:
  - uid: System.Action`11
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`11
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T11}'
  commentId: '!:T11'
  definition: T11
  name: T11
  nameWithType: T11
  fullName: T11
- uid: System.Action`11
  commentId: T:System.Action`11
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  spec.csharp:
  - uid: System.Action`11
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`11
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: )
    nameWithType: )
    fullName: )
- uid: T11
  name: T11
  nameWithType: T11
  fullName: T11
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}
  parent: System
  definition: System.Action`12
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  spec.csharp:
  - uid: System.Action`12
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`12
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T12}'
  commentId: '!:T12'
  definition: T12
  name: T12
  nameWithType: T12
  fullName: T12
- uid: System.Action`12
  commentId: T:System.Action`12
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  spec.csharp:
  - uid: System.Action`12
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`12
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: )
    nameWithType: )
    fullName: )
- uid: T12
  name: T12
  nameWithType: T12
  fullName: T12
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}
  parent: System
  definition: System.Action`13
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  spec.csharp:
  - uid: System.Action`13
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`13
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T13}'
  commentId: '!:T13'
  definition: T13
  name: T13
  nameWithType: T13
  fullName: T13
- uid: System.Action`13
  commentId: T:System.Action`13
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  spec.csharp:
  - uid: System.Action`13
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`13
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: )
    nameWithType: )
    fullName: )
- uid: T13
  name: T13
  nameWithType: T13
  fullName: T13
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}
  parent: System
  definition: System.Action`14
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  spec.csharp:
  - uid: System.Action`14
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`14
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T14}'
  commentId: '!:T14'
  definition: T14
  name: T14
  nameWithType: T14
  fullName: T14
- uid: System.Action`14
  commentId: T:System.Action`14
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  spec.csharp:
  - uid: System.Action`14
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`14
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: )
    nameWithType: )
    fullName: )
- uid: T14
  name: T14
  nameWithType: T14
  fullName: T14
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14},{T15}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}
  parent: System
  definition: System.Action`15
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  spec.csharp:
  - uid: System.Action`15
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`15
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T15}'
  commentId: '!:T15'
  definition: T15
  name: T15
  nameWithType: T15
  fullName: T15
- uid: System.Action`15
  commentId: T:System.Action`15
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  spec.csharp:
  - uid: System.Action`15
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`15
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: )
    nameWithType: )
    fullName: )
- uid: T15
  name: T15
  nameWithType: T15
  fullName: T15
- uid: System.Action{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10},{T11},{T12},{T13},{T14},{T15},{T16}}
  commentId: T:System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}
  parent: System
  definition: System.Action`16
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  spec.csharp:
  - uid: System.Action`16
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T16
    nameWithType: T16
    fullName: T16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`16
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T16
    nameWithType: T16
    fullName: T16
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T16}'
  commentId: '!:T16'
  definition: T16
  name: T16
  nameWithType: T16
  fullName: T16
- uid: System.Action`16
  commentId: T:System.Action`16
  isExternal: true
  name: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  nameWithType: Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  fullName: System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
  nameWithType.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  fullName.vb: System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  name.vb: Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)
  spec.csharp:
  - uid: System.Action`16
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T16
    nameWithType: T16
    fullName: T16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`16
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T7
    nameWithType: T7
    fullName: T7
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T8
    nameWithType: T8
    fullName: T8
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T9
    nameWithType: T9
    fullName: T9
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T10
    nameWithType: T10
    fullName: T10
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T11
    nameWithType: T11
    fullName: T11
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T12
    nameWithType: T12
    fullName: T12
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T13
    nameWithType: T13
    fullName: T13
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T14
    nameWithType: T14
    fullName: T14
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T15
    nameWithType: T15
    fullName: T15
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T16
    nameWithType: T16
    fullName: T16
  - name: )
    nameWithType: )
    fullName: )
- uid: T16
  commentId: '!:T16'
  name: T16
  nameWithType: T16
  fullName: T16
