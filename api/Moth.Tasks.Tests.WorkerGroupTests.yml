### YamlMime:ManagedReference
items:
- uid: Moth.Tasks.Tests.WorkerGroupTests
  commentId: T:Moth.Tasks.Tests.WorkerGroupTests
  id: WorkerGroupTests
  parent: Moth.Tasks.Tests
  children:
  - Moth.Tasks.Tests.WorkerGroupTests.Disposable
  - Moth.Tasks.Tests.WorkerGroupTests.Work(System.Int32)
  - Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get
  - Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease
  - Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase
  langs:
  - csharp
  - vb
  name: WorkerGroupTests
  nameWithType: WorkerGroupTests
  fullName: Moth.Tasks.Tests.WorkerGroupTests
  type: Class
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: WorkerGroupTests
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 8
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: public class WorkerGroupTests
    content.vb: Public Class WorkerGroupTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Moth.Tasks.Tests.WorkerGroupTests.Work(System.Int32)
  commentId: M:Moth.Tasks.Tests.WorkerGroupTests.Work(System.Int32)
  id: Work(System.Int32)
  parent: Moth.Tasks.Tests.WorkerGroupTests
  langs:
  - csharp
  - vb
  name: Work(Int32)
  nameWithType: WorkerGroupTests.Work(Int32)
  fullName: Moth.Tasks.Tests.WorkerGroupTests.Work(System.Int32)
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Work
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 10
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      [TestCase(1)]

      [TestCase(2)]

      [TestCase(3)]

      [TestCase(4)]

      [Timeout(1000)]

      public void Work(int workerCount)
    parameters:
    - id: workerCount
      type: System.Int32
    content.vb: >-
      <Test>

      <TestCase(1)>

      <TestCase(2)>

      <TestCase(3)>

      <TestCase(4)>

      <Timeout(1000)>

      Public Sub Work(workerCount As Integer)
  overload: Moth.Tasks.Tests.WorkerGroupTests.Work*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  - type: NUnit.Framework.TestCaseAttribute
    ctor: NUnit.Framework.TestCaseAttribute.#ctor(System.Object)
    arguments:
    - type: System.Int32
      value: 1
  - type: NUnit.Framework.TestCaseAttribute
    ctor: NUnit.Framework.TestCaseAttribute.#ctor(System.Object)
    arguments:
    - type: System.Int32
      value: 2
  - type: NUnit.Framework.TestCaseAttribute
    ctor: NUnit.Framework.TestCaseAttribute.#ctor(System.Object)
    arguments:
    - type: System.Int32
      value: 3
  - type: NUnit.Framework.TestCaseAttribute
    ctor: NUnit.Framework.TestCaseAttribute.#ctor(System.Object)
    arguments:
    - type: System.Int32
      value: 4
  - type: NUnit.Framework.TimeoutAttribute
    ctor: NUnit.Framework.TimeoutAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.Tests.WorkerGroupTests.Disposable
  commentId: M:Moth.Tasks.Tests.WorkerGroupTests.Disposable
  id: Disposable
  parent: Moth.Tasks.Tests.WorkerGroupTests
  langs:
  - csharp
  - vb
  name: Disposable()
  nameWithType: WorkerGroupTests.Disposable()
  fullName: Moth.Tasks.Tests.WorkerGroupTests.Disposable()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: Disposable
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 21
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      public void Disposable()
    content.vb: >-
      <Test>

      Public Sub Disposable
  overload: Moth.Tasks.Tests.WorkerGroupTests.Disposable*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get
  commentId: M:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get
  id: WorkerCount_Get
  parent: Moth.Tasks.Tests.WorkerGroupTests
  langs:
  - csharp
  - vb
  name: WorkerCount_Get()
  nameWithType: WorkerGroupTests.WorkerCount_Get()
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: WorkerCount_Get
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 35
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      public void WorkerCount_Get()
    content.vb: >-
      <Test>

      Public Sub WorkerCount_Get
  overload: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase
  commentId: M:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase
  id: WorkerCount_Set_Increase
  parent: Moth.Tasks.Tests.WorkerGroupTests
  langs:
  - csharp
  - vb
  name: WorkerCount_Set_Increase()
  nameWithType: WorkerGroupTests.WorkerCount_Set_Increase()
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: WorkerCount_Set_Increase
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 46
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      public void WorkerCount_Set_Increase()
    content.vb: >-
      <Test>

      Public Sub WorkerCount_Set_Increase
  overload: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease
  commentId: M:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease
  id: WorkerCount_Set_Decrease
  parent: Moth.Tasks.Tests.WorkerGroupTests
  langs:
  - csharp
  - vb
  name: WorkerCount_Set_Decrease()
  nameWithType: WorkerGroupTests.WorkerCount_Set_Decrease()
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/WorkerGroupTests.cs
      branch: workers
      repo: https://github.com/djmoth/Moth.Tasks
    id: WorkerCount_Set_Decrease
    path: ../Moth.Tasks.Tests/WorkerGroupTests.cs
    startLine: 57
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      public void WorkerCount_Set_Decrease()
    content.vb: >-
      <Test>

      Public Sub WorkerCount_Set_Decrease
  overload: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Moth.Tasks.Tests
  commentId: N:Moth.Tasks.Tests
  name: Moth.Tasks.Tests
  nameWithType: Moth.Tasks.Tests
  fullName: Moth.Tasks.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
  commentId: M:Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  parent: Moth.Tasks.Tests.TestUtilities
  definition: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  name: GetPrivateValue<T>(String)
  nameWithType: TestUtilities.GetPrivateValue<T>(String)
  fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>(System.String)
  nameWithType.vb: TestUtilities.GetPrivateValue(Of T)(String)
  fullName.vb: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)(System.String)
  name.vb: GetPrivateValue(Of T)(String)
  spec.csharp:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
    name: GetPrivateValue<T>
    nameWithType: TestUtilities.GetPrivateValue<T>
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.String)
    name: GetPrivateValue(Of T)
    nameWithType: TestUtilities.GetPrivateValue(Of T)
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  commentId: M:Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
  isExternal: true
  name: GetPrivateValue<T>(Object, String)
  nameWithType: TestUtilities.GetPrivateValue<T>(Object, String)
  fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>(System.Object, System.String)
  nameWithType.vb: TestUtilities.GetPrivateValue(Of T)(Object, String)
  fullName.vb: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)(System.Object, System.String)
  name.vb: GetPrivateValue(Of T)(Object, String)
  spec.csharp:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
    name: GetPrivateValue<T>
    nameWithType: TestUtilities.GetPrivateValue<T>
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Moth.Tasks.Tests.TestUtilities.GetPrivateValue``1(System.Object,System.String)
    name: GetPrivateValue(Of T)
    nameWithType: TestUtilities.GetPrivateValue(Of T)
    fullName: Moth.Tasks.Tests.TestUtilities.GetPrivateValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Moth.Tasks.Tests.TestUtilities
  commentId: T:Moth.Tasks.Tests.TestUtilities
  parent: Moth.Tasks.Tests
  name: TestUtilities
  nameWithType: TestUtilities
  fullName: Moth.Tasks.Tests.TestUtilities
- uid: Moth.Tasks.Tests.WorkerGroupTests.Work*
  commentId: Overload:Moth.Tasks.Tests.WorkerGroupTests.Work
  name: Work
  nameWithType: WorkerGroupTests.Work
  fullName: Moth.Tasks.Tests.WorkerGroupTests.Work
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Moth.Tasks.Tests.WorkerGroupTests.Disposable*
  commentId: Overload:Moth.Tasks.Tests.WorkerGroupTests.Disposable
  name: Disposable
  nameWithType: WorkerGroupTests.Disposable
  fullName: Moth.Tasks.Tests.WorkerGroupTests.Disposable
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get*
  commentId: Overload:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get
  name: WorkerCount_Get
  nameWithType: WorkerGroupTests.WorkerCount_Get
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Get
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase*
  commentId: Overload:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase
  name: WorkerCount_Set_Increase
  nameWithType: WorkerGroupTests.WorkerCount_Set_Increase
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Increase
- uid: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease*
  commentId: Overload:Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease
  name: WorkerCount_Set_Decrease
  nameWithType: WorkerGroupTests.WorkerCount_Set_Decrease
  fullName: Moth.Tasks.Tests.WorkerGroupTests.WorkerCount_Set_Decrease
