### YamlMime:ManagedReference
items:
- uid: Moth.Tasks.Tests.Tests
  commentId: T:Moth.Tasks.Tests.Tests
  id: Tests
  parent: Moth.Tasks.Tests
  children:
  - Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask
  - Moth.Tasks.Tests.Tests.Setup
  langs:
  - csharp
  - vb
  name: Tests
  nameWithType: Tests
  fullName: Moth.Tasks.Tests.Tests
  type: Class
  source:
    remote:
      path: Moth.Tasks.Tests/TaskQueue.cs
      branch: main
      repo: https://github.com/djmoth/Moth.Tasks
    id: Tests
    path: ../Moth.Tasks.Tests/TaskQueue.cs
    startLine: 5
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: public class Tests
    content.vb: Public Class Tests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Moth.Tasks.Tests.Tests.Setup
  commentId: M:Moth.Tasks.Tests.Tests.Setup
  id: Setup
  parent: Moth.Tasks.Tests.Tests
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: Tests.Setup()
  fullName: Moth.Tasks.Tests.Tests.Setup()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/TaskQueue.cs
      branch: main
      repo: https://github.com/djmoth/Moth.Tasks
    id: Setup
    path: ../Moth.Tasks.Tests/TaskQueue.cs
    startLine: 7
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [SetUp]

      public void Setup()
    content.vb: >-
      <SetUp>

      Public Sub Setup
  overload: Moth.Tasks.Tests.Tests.Setup*
  attributes:
  - type: NUnit.Framework.SetUpAttribute
    ctor: NUnit.Framework.SetUpAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask
  commentId: M:Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask
  id: EnqueueAndTryRunTask
  parent: Moth.Tasks.Tests.Tests
  langs:
  - csharp
  - vb
  name: EnqueueAndTryRunTask()
  nameWithType: Tests.EnqueueAndTryRunTask()
  fullName: Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask()
  type: Method
  source:
    remote:
      path: Moth.Tasks.Tests/TaskQueue.cs
      branch: main
      repo: https://github.com/djmoth/Moth.Tasks
    id: EnqueueAndTryRunTask
    path: ../Moth.Tasks.Tests/TaskQueue.cs
    startLine: 13
  assemblies:
  - Moth.Tasks.Tests
  namespace: Moth.Tasks.Tests
  syntax:
    content: >-
      [Test]

      public void EnqueueAndTryRunTask()
    content.vb: >-
      <Test>

      Public Sub EnqueueAndTryRunTask
  overload: Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Moth.Tasks.Tests
  commentId: N:Moth.Tasks.Tests
  name: Moth.Tasks.Tests
  nameWithType: Moth.Tasks.Tests
  fullName: Moth.Tasks.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Moth.Tasks.Tests.Tests.Setup*
  commentId: Overload:Moth.Tasks.Tests.Tests.Setup
  name: Setup
  nameWithType: Tests.Setup
  fullName: Moth.Tasks.Tests.Tests.Setup
- uid: Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask*
  commentId: Overload:Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask
  name: EnqueueAndTryRunTask
  nameWithType: Tests.EnqueueAndTryRunTask
  fullName: Moth.Tasks.Tests.Tests.EnqueueAndTryRunTask
